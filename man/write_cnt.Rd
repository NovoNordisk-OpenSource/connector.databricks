% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connector_imports.R, R/dbi_methods.R,
%   R/volume_methods.R
\name{write_cnt}
\alias{write_cnt}
\alias{write_cnt.ConnectorDatabricksTable}
\alias{write_cnt.ConnectorDatabricksVolume}
\title{Write content to the connector}
\usage{
write_cnt(connector_object, x, name, ...)

write_cnt.ConnectorDatabricksTable(connector_object, x, name, ...)

write_cnt.ConnectorDatabricksVolume(
  connector_object,
  x,
  name,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{connector_object}{\link[connector]{Connector} The connector object to use.}

\item{x}{The object to write to the connection}

\item{name}{\link{character} Name of the content to read, write, or remove. Typically the table name.}

\item{...}{\link{ConnectorDatabricksVolume}: Additional parameters to pass to the \code{\link[brickster:db_volume_write]{brickster::db_volume_write()}} method}

\item{overwrite}{Overwrite a file if it already exists}
}
\value{
\link{ConnectorDatabricksVolume} object
}
\description{
Addition write methods for databricks connectors implemented for \code{\link[connector:write_cnt]{connector::write_cnt()}}:

\itemize{
\item \link{ConnectorDatabricksTable}: Reuses the \code{\link[connector:read_cnt]{connector::read_cnt()}} method for \link[connector:connector_dbi]{connector::connector_dbi},
but always sets the \code{catalog} and \code{schema} as defined in when initializing the connector.
}

\itemize{
\item \link{ConnectorDatabricksVolume}: Reuses the \code{\link[connector:write_cnt]{connector::write_cnt()}} method for
\link{ConnectorDatabricksVolume}, but always sets the \code{catalog} and
\code{schema} as defined in when initializing the connector.
}
}
