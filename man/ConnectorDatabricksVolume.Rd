% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/volume.R
\name{ConnectorDatabricksVolume}
\alias{ConnectorDatabricksVolume}
\title{Connector for databricks volume storage}
\description{
The ConnectorDatabricksVolume class, built on top of \link[connector:connector]{connector::connector}
class. It is a file storage connector for accessing and manipulating files
inside Databricks volumes.
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Create file storage connector

cnt <- ConnectorDatabricksVolume$new(full_path = "amace_cdr_bronze_dev/nn9536_4373_adam/tester")

cnt

# List content
cnt$list_content_cnt()

# Write to the connector
cnt$write_cnt(iris, "iris.rds")

# Check it is there
cnt$list_content_cnt()

# Read the result back
cnt$read_cnt("iris.rds") |>
  head()
\dontshow{\}) # examplesIf}
}
\section{Super class}{
\code{\link[connector:connector]{connector::connector}} -> \code{ConnectorDatabricksVolume}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{path}}{\link{character} Path to the file storage on Volume}

\item{\code{catalog}}{\link{character} Databricks catalog}

\item{\code{schema}}{\link{character} Databricks schema}

\item{\code{full_path}}{\link{character} Full path to the file storage on Volume}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConnectorDatabricksVolume-new}{\code{ConnectorDatabricksVolume$new()}}
\item \href{#method-ConnectorDatabricksVolume-download_cnt}{\code{ConnectorDatabricksVolume$download_cnt()}}
\item \href{#method-ConnectorDatabricksVolume-upload_cnt}{\code{ConnectorDatabricksVolume$upload_cnt()}}
\item \href{#method-ConnectorDatabricksVolume-create_directory_cnt}{\code{ConnectorDatabricksVolume$create_directory_cnt()}}
\item \href{#method-ConnectorDatabricksVolume-remove_directory_cnt}{\code{ConnectorDatabricksVolume$remove_directory_cnt()}}
\item \href{#method-ConnectorDatabricksVolume-clone}{\code{ConnectorDatabricksVolume$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="connector" data-topic="connector" data-id="list_content_cnt"><a href='../../connector/html/connector.html#method-connector-list_content_cnt'><code>connector::connector$list_content_cnt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="connector" data-topic="connector" data-id="print"><a href='../../connector/html/connector.html#method-connector-print'><code>connector::connector$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="connector" data-topic="connector" data-id="read_cnt"><a href='../../connector/html/connector.html#method-connector-read_cnt'><code>connector::connector$read_cnt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="connector" data-topic="connector" data-id="remove_cnt"><a href='../../connector/html/connector.html#method-connector-remove_cnt'><code>connector::connector$remove_cnt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="connector" data-topic="connector" data-id="write_cnt"><a href='../../connector/html/connector.html#method-connector-write_cnt'><code>connector::connector$write_cnt()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-new}{}}}
\subsection{Method \code{new()}}{
Initializes the connector for Databricks volume storage.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$new(
  full_path = NULL,
  catalog = NULL,
  schema = NULL,
  path = NULL,
  extra_class = NULL,
  force = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{full_path}}{\link{character} Full path to the file storage in format
\code{catalog/schema/path}. If NULL, \code{catalog}, \code{schema}, and \code{path} must be
provided.}

\item{\code{catalog}}{\link{character} Databricks catalog}

\item{\code{schema}}{\link{character} Databricks schema}

\item{\code{path}}{\link{character} Path to the file storage}

\item{\code{extra_class}}{\link{character} Extra class to assign to the new connector.}

\item{\code{force}}{\link{logical} If TRUE, the volume will be created without
asking if it does not exist.}

\item{\code{...}}{Additional arguments passed to the superclass's initialize method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \link{ConnectorDatabricksVolume} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-download_cnt"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-download_cnt}{}}}
\subsection{Method \code{download_cnt()}}{
Download a file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$download_cnt(
  file_path,
  local_path = basename(name),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_path}}{Required. The absolute path of the file.}

\item{\code{local_path}}{local path for the file.}

\item{\code{...}}{Additional parameters to pass to the \link{download_content_cnt} method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The file downloaded
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-upload_cnt"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-upload_cnt}{}}}
\subsection{Method \code{upload_cnt()}}{
Upload a file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$upload_cnt(file_path, contents, overwrite, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_path}}{The absolute path of the file.}

\item{\code{contents}}{File content}

\item{\code{overwrite}}{If true, an existing file will be overwritten.}

\item{\code{...}}{Additional parameters to pass to the \link{upload_content_cnt} method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The file uploaded
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-create_directory_cnt"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-create_directory_cnt}{}}}
\subsection{Method \code{create_directory_cnt()}}{
Create a directory
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$create_directory_cnt(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the directory to create}

\item{\code{...}}{Additional parameters to pass to the \link{create_directory_cnt} method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The directory created
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-remove_directory_cnt"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-remove_directory_cnt}{}}}
\subsection{Method \code{remove_directory_cnt()}}{
Remove a directory from the file storage.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$remove_directory_cnt(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{\link{character} The name of the directory to remove}

\item{\code{...}}{Additional parameters to pass to the \link{remove_directory_cnt} method}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectorDatabricksVolume-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectorDatabricksVolume-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectorDatabricksVolume$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
